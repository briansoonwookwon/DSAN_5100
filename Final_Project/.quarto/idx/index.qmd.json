{"title":"Behind the Beats: A Feature Analysis of Songs by Spotify’s Fab Five","markdown":{"yaml":{"title":"Behind the Beats: A Feature Analysis of Songs by Spotify’s Fab Five","authors":["Brian Kwon","Jorge Bris Moreno","Aaron Schwall","Joe Zhang"],"format":{"html":{"toc":true,"embed-resources":true}},"bibliography":"references.bib"},"headingText":"Abstract","containsRefs":false,"markdown":"\n\n\nThis project looks at specific audio features among the top five most streamed spotify artists of 2022. We used the spotify API to download information on seven audio features for each of the five most streamed artists: BTS, Bad Bunny, The Weeknd, Taylor Swift, and Drake. The features studied are: Accousticness, Danceability, Energy, Loudness, Speechiness, Tempo, and Valence. We performed exploratory data analysis to determine our hypothesis, and then performed three different hypothesis tests to determine which features were common among the artists. We performed T-Tests, Wilcoxon Ranked Sum tests, and bootstrapping tests. We found that the tempo was the same among all of the top five artists, but all of the other audio features were different for at least one artist. \n\n---\n\n# Introduction\n\n\nThis project aims to compare various features of the top 5 most streamed artists on Spotify in 2022 [@artists]. The goal is to identify which variables are statistically same or different among those artists, and eventually determine the optimal range of features in order to get more streams. While we cannot determine with these tests whether or not the features are deterministic on popularity, it will be of great use for comparison and analysis. Thus, if a feature does not differ on any of the artists, we can safely imply that there seems to be an optimal range on that feature if the feature itself is actually deterministic on the number of streams.\n\n\nFor this study, all features obtained from spotify API will be used except for instrumentalness and Liveness. Given that instrumentalness has a huge amount of zeros due to the nature of these artists, that is they are singers, this feature is out of the scope of this project. Furthermore, liveness focuses on whether the music was performed live or not. This feature also is not related to the number of streams.\n\n\nThe rest of the features and their meanings are as follows [@features]:\\\n\n\n- Acousticness: Measures from 0 to 1 whether a track is acoustic or not (0 being the lowest).\n- Danceability: Measures how suitable the music is for dancing (0 being the least suitable).\n- Energy: Measures the perception of intensity and activity of a song from 0 to 1 (0 being the lowest).\n- Loudness: Measures the loudness of tracks in decibels (from -60 to 0).\n- Speechiness: Measures the ratio of spoken words to music in a track from 0 to 1 (0 being the lowest).\n- Tempo: Measures the beats per minute (referring to the pace of the track and the average beat duration).\n- Valence: Measures the positiveness of a track from 0 to 1 (0 being the most negative value and 1 being the most positive value).\n\n\nOur hypothesis testing is going to be pairwise comparing each feature on pairs of all the artists. Our null hypothesis for every feature will be that there is no difference on that specific feature among all pairs of the artists, while the alternative hypothesis will be that there is a statistically significant differnce between pairs of artists on that feature.\n\n\nThe hypotheses can be written as follows:\n\n\n$H_0: \\forall f\\in F [\\forall a,b \\in A, a \\neq b [\\mu_{f,a} - \\mu_{f,b} = 0]]$\\\n$H_A: \\exists f\\in F [\\exists a,b \\in A, a \\neq b [\\mu_{f,a} - \\mu_{f,b} \\neq 0]]$\n\n\n$F$ = {$\\text{Acousticness, Danceability, Energy, Loudness, Speechiness, Tempo, Valence}$}\\\n$A$ = {$\\text{Taylor Swift, BTS, Bad Bunny, Drake, The Weeknd}$}\n\n# Data Collection\n\nIn order to access and contrast the audio features of the artists who are most streamed on Spotify in 2022, we first created a Spotify Developer account. With this account, we can access Spotify's API, which is an effective tool for getting different types of data from Spotify.\nYou can access or retrieve information about artists, tracks, and audio features by using get_artist_audio_features( ) function offered by the Spotify API. The get_artist_audio_features() function appears to be especially pertinent for our needs.\nWe can use this function to find out specific artists' audio feature details in detail. These audio features, which provide insights into the musical qualities that make these artists popular, may include elements like tempo, loudness, energy, danceability, and such.\n\n```{r}\n#| code-fold: true\n#| warning: false\n#| code-summary: Data Preparation\n#| vscode: {languageId: r}\n\nlibrary(spotifyr)\nlibrary(ggplot2)\nlibrary(ggcorrplot)\nlibrary(viridis)\nlibrary(plotly, quietly = TRUE)\n\nSys.setenv(SPOTIFY_CLIENT_ID = \"8a556a04a8634ac99c1c317c336cdcaa\")\nSys.setenv(SPOTIFY_CLIENT_SECRET = \"2c681e6bf45b450396d1e5d2487e5f71\")\n\naccess_token = get_spotify_access_token()\n\nTaylor_Swift = get_artist_audio_features(\"Taylor Swift\")\nBTS = get_artist_audio_features(\"BTS\")\nBad_Bunny = get_artist_audio_features(\"Bad Bunny\")\nDrake = get_artist_audio_features(\"Drake\")\nThe_weeknd = get_artist_audio_features(\"The Weeknd\")\n\nts = data.frame(Taylor_Swift$artist_name,Taylor_Swift$acousticness,\n                Taylor_Swift$danceability,Taylor_Swift$energy,\n                Taylor_Swift$instrumentalness,Taylor_Swift$liveness,\n                Taylor_Swift$loudness,Taylor_Swift$speechiness,\n                Taylor_Swift$tempo, Taylor_Swift$valence,\n                Taylor_Swift$track_name, Taylor_Swift$album_name,Taylor_Swift$album_release_year)\ncolnames(ts) = c(\"Artist_name\",\"Acousticness\",\"Danceability\",\"Energy\", \"Instrumentalness\",\n                              \"Liveness\",\"Loudness\",\"Speechiness\",\n                              \"Tempo\",\"Valence\",\"Track_name\",\"Album_name\",\"Album_release_year\")\n\nbts = data.frame(BTS$artist_name,BTS$acousticness,\n                BTS$danceability,BTS$energy,\n                BTS$instrumentalness,BTS$liveness,\n                BTS$loudness,BTS$speechiness,\n                BTS$tempo, BTS$valence,\n                BTS$track_name, BTS$album_name,BTS$album_release_year)\ncolnames(bts) = c(\"Artist_name\",\"Acousticness\",\"Danceability\",\"Energy\", \"Instrumentalness\",\n                              \"Liveness\",\"Loudness\",\"Speechiness\",\n                              \"Tempo\",\"Valence\",\"Track_name\",\"Album_name\",\"Album_release_year\")\n\nbb = data.frame(Bad_Bunny$artist_name,Bad_Bunny$acousticness,\n                Bad_Bunny$danceability,Bad_Bunny$energy,\n                Bad_Bunny$instrumentalness,Bad_Bunny$liveness,\n                Bad_Bunny$loudness,Bad_Bunny$speechiness,\n                Bad_Bunny$tempo, Bad_Bunny$valence,\n                Bad_Bunny$track_name, Bad_Bunny$album_name,Bad_Bunny$album_release_year)\ncolnames(bb) = c(\"Artist_name\",\"Acousticness\",\"Danceability\",\"Energy\", \"Instrumentalness\",\n                              \"Liveness\",\"Loudness\",\"Speechiness\",\n                              \"Tempo\",\"Valence\",\"Track_name\",\"Album_name\",\"Album_release_year\")\n\ndk = data.frame(Drake$artist_name,Drake$acousticness,\n                Drake$danceability,Drake$energy,\n                Drake$instrumentalness,Drake$liveness,\n                Drake$loudness,Drake$speechiness,\n                Drake$tempo, Drake$valence,\n                Drake$track_name, Drake$album_name,Drake$album_release_year)\ncolnames(dk) = c(\"Artist_name\",\"Acousticness\",\"Danceability\",\"Energy\", \"Instrumentalness\",\n                              \"Liveness\",\"Loudness\",\"Speechiness\",\n                              \"Tempo\",\"Valence\",\"Track_name\",\"Album_name\",\"Album_release_year\")\n\nwd = data.frame(The_weeknd$artist_name,The_weeknd$acousticness,\n                The_weeknd$danceability,The_weeknd$energy,\n                The_weeknd$instrumentalness,The_weeknd$liveness,\n                The_weeknd$loudness,The_weeknd$speechiness,\n                The_weeknd$tempo, The_weeknd$valence,\n                The_weeknd$track_name, The_weeknd$album_name,The_weeknd$album_release_year)\ncolnames(wd) = c(\"Artist_name\",\"Acousticness\",\"Danceability\",\"Energy\", \"Instrumentalness\",\n                              \"Liveness\",\"Loudness\",\"Speechiness\",\n                              \"Tempo\",\"Valence\",\"Track_name\",\"Album_name\",\"Album_release_year\")\n\ndf = rbind(ts, bts, bb, dk, wd)\nhead(df)\n```\n\n```{r}\n#| code-fold: true\n#| code-summary: Checking NAs\n#| vscode: {languageId: r}\ncat(\"There is\", sum(is.na(df)),\"NA values.\")\n```\n\n# Tests\n\n### T-Test\n\nThe t-test is used to compare means to determine if there is a significant difference. The t-test is based on the t-statistic, which is the difference of the means of two populations or samples and dividing it by the standard error of the difference. We used a pairwise t-test in order to test if the means of the specific features were different between the different pairs of artists. The t-test returns a matrix of p-values calculated from the t-statistics for each artist pair. Each p-value refers to the probability of observing a t-statistic as extreme or more extreme than the one obtained. We used a 95% confidence interval. This means that if the p-value was above 0.05$\\%$, we rejected the null hypothesis and accepted the alternative hypothesis for that artist pairing.    \n\n### Wilcoxon Rank Sum Test\n\nWilcoxon test is a non-parametric statistical test used to find whether there is a statistically significant difference between a pair of means. As a non-parametric test, it is great as it does not assume equal variance between the two populations. How it works is by calculating the difference between each pair of data points (one from each population or sample) and ranking the differences in absolute value from largest to smallest. Then, we are calculating the sum of the ranks for each and the Wilcoxon test statistic is the smallest of the two sum ranks (in absolute value). Additionally, a p-value is calculated which determines the probability of obtaining a test statistic as extreme or more extreme than the one obtained, and this is the value returned in our hypothesis tests. For this test, we have used a 95$\\%$ confidence level, which means that if the p-value obtained is less than 0.05, we reject the null hypothesis while if it is greater than 0.05, we fail to reject our null hypothesis.\n\n###  Bootstrap Test\n\nThe bootstrapping difference in means is a useful hypothesis test to compare whether or not two means statistically differ from each other. Each population/sample is resampled n times with n samples in each resample. Then, the mean of each is calculated and subtracted from the other resample of the comparing population/sample. Then, a new distribution is obtained (normally distributed) of the difference in means. Then, a confidence interval is calculated at your confidence level (95$\\%$ in our case) and, if the interval contains the value of 0, we will reject the null as we find statistical significance on the means of both populations. If the interval is positive, that means that the first mean is statistically significantly greater from the one subtracted while, if negative, the first mean is statistically significantly lower from the one subtracted. However, if the confidence interval contains 0, we fail to reject at our confidence level and cannot state that there is a difference between the means of both populations.\n\n# EDA\n\nThe objective of Exploratory Data Analysis is to give us a better understanding of our data sets by obtaining information about the data’s range, characteristics, correlations, patterns, and visual outliers. This step is crucial for making the right assumptions, cross checking results, and making the right conclusions. \n\nThe plots below provide us with relevant information about each of the seven features based on each artist. While no final conclusions can be drawn from these, they will allow us to visualize the data and better understand it.\n\n```{r}\n#| code-fold: true\n#| vscode: {languageId: r}\ncat(\"Taylor Swift has\",nrow(ts),\"tracks.\",\"\\n\")\ncat(\"BTS has\",nrow(bts),\"tracks.\",\"\\n\")\ncat(\"Bad Bunny has\",nrow(bb),\"tracks.\",\"\\n\")\ncat(\"Drake has\",nrow(dk),\"tracks.\",\"\\n\")\ncat(\"The Weeknd has\",nrow(wd),\"tracks.\",\"\\n\")\n```\n\nThe above data frame row numbers give us the number of tracks published by each artist on spotify. Taylor swift unfortunately has the largest catalog, with 530 individual tracks. Bad Bunny has the smallest catalog of the top five streamed artists, with only 113 individual tracks. To help put those numbers into perspective, consider that the average EP is 4 to 5 songs long, and the average album is 10-12 songs long. Even though Bad Bunny has the smallest catalog of the top five, he still has far more songs then the average spotify artist. It makes sense that the most streamed artists would be ones that have a significant number of tracks for listeners to play.\n\n```{r}\n#| code-fold: true\n#| vscode: {languageId: r}\nmx = cor(df[,c(2,3,4,5,6,7,8,9,10)])\nggcorrplot(mx, hc.order = TRUE, type = \"lower\", lab=TRUE, title = \"Correlation between features\")\n```\n\nAbove is a correlation heatmap between all of the initially collected features. After preliminary EDA, we determined that the features Instrumentallness and Liveness would be excluded from future EDA, because due to the nature of the top five artists they provide very little useful information. In the heatmap above, we can see that the highest correlation is between energy and loudness. This makes sense, as we can expect louder songs to feel like they have more energy. We can also see significant positive correlation between energy and valence, telling us that high energy songs are probably more likely to be positive sounding. There is a significant visible negative correlation between loudness and acousticness, as well as energy and acousticness. This also makes sense, as acoustic songs tend to sound slower and lower energy then non acoustic ones. One of the more interesting findings from this plot is that both tempo and speechiness don't have a strong correlation with any other features.\n\n```{r}\n#| code-fold: true\n#| warning: false\n#| vscode: {languageId: r}\nggplot(df, aes_string(x = \"Artist_name\", y = \"Speechiness\", fill = \"Artist_name\")) +\ngeom_boxplot() + ggtitle(\"Speechiness Comparison\") + xlab(\"Artists\") + ylab(\"Speechiness\") +\nscale_fill_manual(values = c(\"lightblue1\", \"pink1\", \"burlywood1\", \"turquoise\", \"purple3\")) + theme_minimal()\n\nggplot(df, aes_string(x = \"Artist_name\", y = \"Loudness\", fill = \"Artist_name\")) +\ngeom_boxplot() + ggtitle(\"Loudness Comparison\") + xlab(\"Artists\") + ylab(\"Loudness\") +\nscale_fill_manual(values = c(\"lightblue1\", \"pink1\", \"burlywood1\", \"turquoise\", \"purple3\")) + theme_minimal()\n```\n\nAbove are box plots for the features  speechiness and loudness. Speechiness describes the amount of spoken word in a Spotify track. We can see that all of the top five artists have relatively low speechiness scores, with Taylor Swift's average and interquartile range being by far the smallest. Drake has the largest average and interquartile range. This is likely due to the genre of the artists, as Taylor Swift's songs are almost all pop or country pop, while Drake's music is closer to rap/hip-hop. In our loudness box plot, we can see all of the artists have relatively high loudness scores. BTS has the highest loudness score, followed by Bad Bunny. Drake, Taylor Swift, and the Weeknd all have relatively similar loudness scores. This is likely also due to the artist's genre. BTS is a K-POP group, while Bad BUnny is Reggaeton.\n\n```{r}\n#| code-fold: true\n#| warning: false\n#| vscode: {languageId: r}\nggplot(df, aes_string(x = \"Artist_name\", y = \"Instrumentalness\", fill = \"Artist_name\")) +\n                geom_boxplot() + ggtitle(\"Instrumentalness Comparison\") + xlab(\"Artists\") + ylab(\"Instrumentalness\") +\n                scale_fill_manual(values = c(\"lightblue1\", \"pink1\", \"burlywood1\", \"turquoise\", \"purple3\")) + theme_minimal()\n```\n\nAbove is the box plot for instrumentalness. Instrumentalness describes if a track is instrumental as opposed to vocal. We chose to not include this feature in our analysis because of the fact that almost all of the values are 0. This is expected, because all of the top five artists are singers.\n\n```{r}\n#| code-fold: true\n#| vscode: {languageId: r}\nggplot(df, aes(x = Energy, fill = Artist_name)) +\ngeom_density(alpha = 0.5) +\nlabs(title = \"Energy Comparison\", x = \"Energy\", y = \"Density\") +\nscale_fill_manual(values = c(\"lightblue1\", \"pink1\", \"burlywood1\", \"turquoise\", \"purple3\")) +\ntheme_minimal()\n\nggplot(df, aes(x = Tempo, fill = Artist_name)) +\ngeom_density(alpha = 0.5) +\nlabs(title = \"Tempo Comparison\", x = \"Tempo\", y = \"Density\") +\nscale_fill_manual(values = c(\"lightblue1\", \"pink1\", \"burlywood1\", \"turquoise\", \"purple3\")) +\ntheme_minimal()\n```\n\nAbove are density plots for the features energy and tempo. This type of plot allows us to view the distributions of the features for each artist on top of each other. When looking at the energy densities, we can see right away that BTS has a much higher energy distribution than the other artists. They also have a lower standard deviation than the other distributions. BAd bunny has the second highest energy distribution. Drake has the lowest energy distribution. One interesting thing to note is that Taylor Swift appears to have the highest standard deviation among the top five artists.\n\n```{r}\n#| warning: false\n#| code-fold: true\n#| vscode: {languageId: r}\nggplot(data = df, aes(x = Artist_name, y = Danceability, fill = Artist_name)) +\n    geom_violin(width = 0.5) +\n    geom_boxplot(width = 0.9, color = \"grey\", alpha = 0.2) +\n    scale_fill_viridis(discrete = TRUE) +\n    labs(title = \"Danceability Comparison\", x = \"Artists\", y = \"Danceability\")\n\nggplot(data = df, aes(x = Artist_name, y = Acousticness, fill = Artist_name)) +\n    geom_violin(width = 0.5) +\n    geom_boxplot(width = 0.9, color = \"grey\", alpha = 0.2) +\n    scale_fill_viridis(discrete = TRUE) +\n    labs(title = \"Acousticness Comparison\", x = \"Artists\", y = \"Acousticness\")\n    \nggplot(data = df, aes(x = Artist_name, y = Valence, fill = Artist_name)) +\n    geom_violin(width = 0.5) +\n    geom_boxplot(width = 0.9, color = \"grey\", alpha = 0.2) +\n    scale_fill_viridis(discrete = TRUE) +\n    labs(title = \"Valence Comparison\", x = \"Artists\", y = \"Valence\")\n        \n```\n\nAbove are density plots for the features energy and tempo. This type of plot allows us to view the distributions of the features for each artist on top of each other. When looking at the energy densities, we can see right away that BTS has a much higher energy distribution than the other artists. They also have a lower standard deviation than the other distributions. BAd bunny has the second highest energy distribution. Drake has the lowest energy distribution. One interesting thing to note is that Taylor Swift appears to have the highest standard deviation among the top five artists.\n\n```{r}\n#| code-fold: true\n#| vscode: {languageId: r}\nggplot(data = df, aes(x = Artist_name, y = Acousticness, color = Artist_name)) +\n  geom_jitter(alpha = 0.7, width = 0.3) +\n  geom_boxplot(width = 0.2, outlier.shape = NA, coef = 0) +\n  labs(title = \"Acousticness Comparison\",\n       x = \"Artist\",\n       y = \"Acousticness\") +\n  scale_color_manual(values = c(\"lightblue1\", \"pink1\", \"burlywood1\", \"turquoise\", \"purple3\")) +\n  theme_minimal()\n```\n\nAbove is a density box plot for acousticness. Again, we can see that BTS has a much lower Acousticness score and a significantly narrower interquartile range. We can see again that Taylor Swift has a much wider inter quartile range than any of the other top five artists. Another interesting thing we can take away from this plot is the visual representation of the scale of the artists catalogs. The density of Taylor Swift's plot is much greater than that of artists with smaller catalogs like BTS and Bad Bunny.\n\n```{r}\n#| code-fold: true\n#| vscode: {languageId: r}\nplot_ly(df, x = ~Energy, y = ~Loudness, z = ~Artist_name, type = 'scatter3d', color = ~Artist_name, mode = 'markers')\n```\n\nAbove is the 3D plot on loudness and energy between artists. As we can see on the correlation heatmap, we can see there is a positive correlation between energy and loudness on all artists.\n\n```{r}\n#| code-fold: true\n#| vscode: {languageId: r}\nplot_ly(df, x = ~Loudness, y = ~Acousticness, z = ~Artist_name, type = 'scatter3d', color = ~Artist_name, mode = 'markers')\n```\n\nHaving the correlation coefficient of -0.56, the 3D plot doesn't show the a strong correlation visually.\n\n# Hypothesis Testing\n\n```{r}\n#| code-fold: true\n#| code-summary: Functions for bootstrap tests\n#| vscode: {languageId: r}\n# Function to bootstrap mean difference of two samples for the test\nboot.test = function(x1,x2,feature,iter){\n    boot1 = numeric(length(x1[[feature]]))\n    boot2 = numeric(length(x2[[feature]]))\n    for(i in 1:iter){\n        boot1[i] = mean(sample(x1[[feature]],length(x1[[feature]]),replace=TRUE))\n        boot2[i] = mean(sample(x2[[feature]],length(x2[[feature]]),replace=TRUE))\n    }\n    return(boot1 - boot2)\n}\n\n# Function to check if 0 is within the range\ncontains_zero <- function(quantiles) {\n  return (quantiles[1] <= 0 && quantiles[2] >= 0)\n}\n```\n\nThese two functions will make easier to do bootstrap tests. Function `boot.test` returns mean difference between two bootstrap samples. From that mean difference, we can use `contains_zero` function to check whether the confidence interval includes zero or not in a certain level.\n\n## Acousticness\n\n```{r}\n#| code-fold: true\n#| code-summary: T-Test\n#| vscode: {languageId: r}\npairwise.t.test(df$Acousticness, df$Artist_name)\n```\n\nFrom this pairwise T-Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of acousticness between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Taylor Swift\n- Drake and Taylor Swift\n- Taylor Swift and The Weeknd\n\nOther pairs below have p-value higher than 0.05, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of acousticness.\n\n- Bad Bunny and Drake\n- Bad Bunny and The Weeknd\n- Drake and The Weekend\n\n```{r}\n#| code-fold: true\n#| code-summary: Wilcoxon Rank Sum Test\n#| vscode: {languageId: r}\npairwise.wilcox.test(df$Acousticness, df$Artist_name)\n```\n\nFrom this pairwise Wilcoxon Rank Sum Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of acousticness between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n\nOther pairs below have p-value higher than 0.05, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of acousticness.\n\n- Bad Bunny and Drake\n- Bad Bunny and Taylor Swift\n- Bad Bunny and The Weeknd\n- Drake and Taylor Swift\n- Drake and The Weekend\n- Taylor Swift and The Weeknd\n\n```{r}\n#| code-fold: true\n#| code-summary: Bootstrap Test\n#| vscode: {languageId: r}\nc1 = quantile(boot.test(ts,bb,\"Acousticness\",1000),c(0.025,0.975))\nc2 = quantile(boot.test(ts,bts,\"Acousticness\",1000),c(0.025,0.975))\nc3 = quantile(boot.test(ts,dk,\"Acousticness\",1000),c(0.025,0.975))\nc4 = quantile(boot.test(ts,wd,\"Acousticness\",1000),c(0.025,0.975))\nc5 = quantile(boot.test(bts,bb,\"Acousticness\",1000),c(0.025,0.975))\nc6 = quantile(boot.test(bts,dk,\"Acousticness\",1000),c(0.025,0.975))\nc7 = quantile(boot.test(bts,wd,\"Acousticness\",1000),c(0.025,0.975))\nc8 = quantile(boot.test(bb,dk,\"Acousticness\",1000),c(0.025,0.975))\nc9 = quantile(boot.test(bb,wd,\"Acousticness\",1000),c(0.025,0.975))\nc10 = quantile(boot.test(dk,wd,\"Acousticness\",1000),c(0.025,0.975))\n\nresult_matrix = matrix(c(\n    c1, c2, c3, c4, c5, c6, c7, c8, c9, c10\n), ncol = 2, byrow = TRUE)\n\nresult_matrix = data.frame(result_matrix)\ninclude_zero = apply(result_matrix, 1, contains_zero)\nresult_matrix[\"Test\"] = include_zero\ncolnames(result_matrix) = c(\"2.5%\",\"97.5%\",\"Test\")\nresult_matrix\n```\n\nFrom this Bootstrap Test with a 95% confidence level, we reject the null hypothesis on pairs where the confidence interval doesn't include 0. That is, there is a significant difference in the means of acousticness between the following pairs of artists:\n\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and BTS\n- Taylor Swift and The Weeknd\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and The Weeknd\n\nOther pairs below have confidence intervals inclduing 0, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of acousticness.\n\n- Bad Bunny and Drake\n- Bad Bunny and The Weeknd\n- Drake and The Weeknd\n\n## Danceability\n\n```{r}\n#| code-fold: true\n#| code-summary: T-Test\n#| vscode: {languageId: r}\npairwise.t.test(df$Danceability, df$Artist_name)\n```\n\nFrom this pairwise T-Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of danceability between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and The Weeknd\n- Drake and Bad Bunny\n- Drake and The Weeknd\n- Bad Bunny and the Weeknd\n\n\nThus, all pairs hold significant difference.\n\n```{r}\n#| code-fold: true\n#| code-summary: Wilcoxon Rank Sum Test\n#| vscode: {languageId: r}\npairwise.wilcox.test(df$Danceability, df$Artist_name)\n```\n\nFrom this pairwise Wilcoxon Rank Sum Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of danceability between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and The Weeknd\n- Drake and Bad Bunny\n- Drake and The Weeknd\n- Bad Bunny and the Weeknd\n\nThus, all pairs hold significant difference.\n\n```{r}\n#| code-fold: true\n#| code-summary: Bootstrap Test\n#| vscode: {languageId: r}\nc1 = quantile(boot.test(ts,bb,\"Danceability\",1000),c(0.025,0.975))\nc2 = quantile(boot.test(ts,bts,\"Danceability\",1000),c(0.025,0.975))\nc3 = quantile(boot.test(ts,dk,\"Danceability\",1000),c(0.025,0.975))\nc4 = quantile(boot.test(ts,wd,\"Danceability\",1000),c(0.025,0.975))\nc5 = quantile(boot.test(bts,bb,\"Danceability\",1000),c(0.025,0.975))\nc6 = quantile(boot.test(bts,dk,\"Danceability\",1000),c(0.025,0.975))\nc7 = quantile(boot.test(bts,wd,\"Danceability\",1000),c(0.025,0.975))\nc8 = quantile(boot.test(bb,dk,\"Danceability\",1000),c(0.025,0.975))\nc9 = quantile(boot.test(bb,wd,\"Danceability\",1000),c(0.025,0.975))\nc10 = quantile(boot.test(dk,wd,\"Danceability\",1000),c(0.025,0.975))\n\nresult_matrix = matrix(c(\n    c1, c2, c3, c4, c5, c6, c7, c8, c9, c10\n), ncol = 2, byrow = TRUE)\n\nresult_matrix = data.frame(result_matrix)\ninclude_zero = apply(result_matrix, 1, contains_zero)\nresult_matrix[\"Test\"] = include_zero\ncolnames(result_matrix) = c(\"2.5%\",\"97.5%\",\"Test\")\nresult_matrix\n```\n\nFrom this Bootstrap Test with a 95% confidence level, we reject the null hypothesis on pairs where the confidence interval doesn't include 0. That is, there is a significant difference in the means of danceability between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and The Weeknd\n- Drake and Bad Bunny\n- Drake and The Weeknd\n- Bad Bunny and the Weeknd\n\nThus, all pairs hold significant difference.\n\n## Energy\n\n```{r}\n#| code-fold: true\n#| code-summary: T-Test\n#| vscode: {languageId: r}\npairwise.t.test(df$Energy, df$Artist_name)\n```\n\nFrom this pairwise T-Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of energy between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and Taylor Swift\n- Bad Bunny and The Weekend\n\nOther pairs below have p-value higher than 0.05, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of energy.\n\n- Drake and Taylor Swift\n- Drake and The Weeknd\n- Taylor Swift and The Weeknd\n\n```{r}\n#| code-fold: true\n#| code-summary: Wilcoxon Rank Sum Test\n#| vscode: {languageId: r}\npairwise.wilcox.test(df$Energy, df$Artist_name)\n```\n\nFrom this pairwise Wilcoxon Rank Sum Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of energy between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and Taylor Swift\n- Bad Bunny and The Weeknd\n- Drake and Taylor Swift\n- Drake and The Weekend\n\nOther pairs below have p-value higher than 0.05, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of energy.\n\n- Taylor Swift and The Weeknd\n\n```{r}\n#| code-fold: true\n#| code-summary: Bootstrap Test\n#| vscode: {languageId: r}\nc1 = quantile(boot.test(ts,bb,\"Energy\",1000),c(0.025,0.975))\nc2 = quantile(boot.test(ts,bts,\"Energy\",1000),c(0.025,0.975))\nc3 = quantile(boot.test(ts,dk,\"Energy\",1000),c(0.025,0.975))\nc4 = quantile(boot.test(ts,wd,\"Energy\",1000),c(0.025,0.975))\nc5 = quantile(boot.test(bts,bb,\"Energy\",1000),c(0.025,0.975))\nc6 = quantile(boot.test(bts,dk,\"Energy\",1000),c(0.025,0.975))\nc7 = quantile(boot.test(bts,wd,\"Energy\",1000),c(0.025,0.975))\nc8 = quantile(boot.test(bb,dk,\"Energy\",1000),c(0.025,0.975))\nc9 = quantile(boot.test(bb,wd,\"Energy\",1000),c(0.025,0.975))\nc10 = quantile(boot.test(dk,wd,\"Energy\",1000),c(0.025,0.975))\n\nresult_matrix = matrix(c(\n    c1, c2, c3, c4, c5, c6, c7, c8, c9, c10\n), ncol = 2, byrow = TRUE)\n\nresult_matrix = data.frame(result_matrix)\ninclude_zero = apply(result_matrix, 1, contains_zero)\nresult_matrix[\"Test\"] = include_zero\ncolnames(result_matrix) = c(\"2.5%\",\"97.5%\",\"Test\")\nresult_matrix\n```\n\nFrom this Bootstrap Test with a 95% confidence level, we reject the null hypothesis on pairs where the confidence interval doesn't include 0. That is, there is a significant difference in the means of energy between the following pairs of artists:\n\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and BTS\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and The Weeknd\n- Drake and The Weeknd\n\nOther pairs below have confidence intervals inclduing 0, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of energy.\n\n- Taylor Swift and The Weeknd\n\n## Loudness\n\n```{r}\n#| code-fold: true\n#| code-summary: T-Test\n#| vscode: {languageId: r}\npairwise.t.test(df$Loudness, df$Artist_name)\n```\n\nFrom this pairwise T-Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of loudness between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and Taylor Swift\n- Bad Bunny and The Weekend\n- Drake and Taylor Swift\n- Taylor Swift and The Weeknd\n\nOther pairs below have p-value higher than 0.05, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of loudness.\n\n- Drake and The Weeknd\n\n\n```{r}\n#| code-fold: true\n#| code-summary: Wilcoxon Rank Sum Test\n#| vscode: {languageId: r}\npairwise.wilcox.test(df$Loudness, df$Artist_name)\n```\n\nFrom this pairwise Wilcoxon Rank Sum Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of loudness between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and Taylor Swift\n- Bad Bunny and The Weekend\n- Drake and Taylor Swift\n- Taylor Swift and The Weeknd\n\nOther pairs below have p-value higher than 0.05, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of loudness.\n\n- Drake and The Weeknd\n\n```{r}\n#| code-fold: true\n#| code-summary: Bootstrap Test\n#| vscode: {languageId: r}\nc1 = quantile(boot.test(ts,bb,\"Loudness\",1000),c(0.025,0.975))\nc2 = quantile(boot.test(ts,bts,\"Loudness\",1000),c(0.025,0.975))\nc3 = quantile(boot.test(ts,dk,\"Loudness\",1000),c(0.025,0.975))\nc4 = quantile(boot.test(ts,wd,\"Loudness\",1000),c(0.025,0.975))\nc5 = quantile(boot.test(bts,bb,\"Loudness\",1000),c(0.025,0.975))\nc6 = quantile(boot.test(bts,dk,\"Loudness\",1000),c(0.025,0.975))\nc7 = quantile(boot.test(bts,wd,\"Loudness\",1000),c(0.025,0.975))\nc8 = quantile(boot.test(bb,dk,\"Loudness\",1000),c(0.025,0.975))\nc9 = quantile(boot.test(bb,wd,\"Loudness\",1000),c(0.025,0.975))\nc10 = quantile(boot.test(dk,wd,\"Loudness\",1000),c(0.025,0.975))\n\nresult_matrix = matrix(c(\n    c1, c2, c3, c4, c5, c6, c7, c8, c9, c10\n), ncol = 2, byrow = TRUE)\n\nresult_matrix = data.frame(result_matrix)\ninclude_zero = apply(result_matrix, 1, contains_zero)\nresult_matrix[\"Test\"] = include_zero\ncolnames(result_matrix) = c(\"2.5%\",\"97.5%\",\"Test\")\nresult_matrix\n```\n\nFrom this Bootstrap Test with a 95% confidence level, we reject the null hypothesis on pairs where the confidence interval doesn't include 0. That is, there is a significant difference in the means of loudness between the following pairs of artists:\n\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and Taylor Swift\n- Bad Bunny and The Weekend\n- Drake and Taylor Swift\n- Taylor Swift and The Weeknd\n\nOther pairs below have confidence intervals inclduing 0, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of loudness.\n\n- Drake and The Weeknd\n\n## Speechiness\n\n```{r}\n#| code-fold: true\n#| code-summary: T-Test\n#| vscode: {languageId: r}\npairwise.t.test(df$Speechiness, df$Artist_name)\n```\n\nFrom this pairwise T-Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of speechiness between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and Taylor Swift\n- Bad Bunny and The Weeknd\n- Drake and Taylor Swift\n- Drake and The Weeknd\n\nOther pairs below have p-value higher than 0.05, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of speechiness.\n\n- Taylor Swift and The Weeknd\n\n```{r}\n#| code-fold: true\n#| code-summary: Wilcoxon Rank Sum Test\n#| vscode: {languageId: r}\npairwise.wilcox.test(df$Speechiness, df$Artist_name)\n```\n\nFrom this pairwise Wilcoxon Rank Sum Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of speechiness between the following pairs of artists:\n\n-- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and Taylor Swift\n- Bad Bunny and The Weeknd\n- Drake and Taylor Swift\n- Drake and The Weeknd\n- Taylor Swift and The Weeknd\n\nOther pairs below have p-value higher than 0.05, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of speechiness.\n\n- BTS and Bad Bunny\n\n```{r}\n#| code-fold: true\n#| code-summary: Bootstrap Test\n#| vscode: {languageId: r}\nc1 = quantile(boot.test(ts,bb,\"Speechiness\",1000),c(0.025,0.975))\nc2 = quantile(boot.test(ts,bts,\"Speechiness\",1000),c(0.025,0.975))\nc3 = quantile(boot.test(ts,dk,\"Speechiness\",1000),c(0.025,0.975))\nc4 = quantile(boot.test(ts,wd,\"Speechiness\",1000),c(0.025,0.975))\nc5 = quantile(boot.test(bts,bb,\"Speechiness\",1000),c(0.025,0.975))\nc6 = quantile(boot.test(bts,dk,\"Speechiness\",1000),c(0.025,0.975))\nc7 = quantile(boot.test(bts,wd,\"Speechiness\",1000),c(0.025,0.975))\nc8 = quantile(boot.test(bb,dk,\"Speechiness\",1000),c(0.025,0.975))\nc9 = quantile(boot.test(bb,wd,\"Speechiness\",1000),c(0.025,0.975))\nc10 = quantile(boot.test(dk,wd,\"Speechiness\",1000),c(0.025,0.975))\n\nresult_matrix = matrix(c(\n    c1, c2, c3, c4, c5, c6, c7, c8, c9, c10\n), ncol = 2, byrow = TRUE)\n\nresult_matrix = data.frame(result_matrix)\ninclude_zero = apply(result_matrix, 1, contains_zero)\nresult_matrix[\"Test\"] = include_zero\ncolnames(result_matrix) = c(\"2.5%\",\"97.5%\",\"Test\")\nresult_matrix\n```\n\nFrom this Bootstrap Test with a 95% confidence level, we reject the null hypothesis on pairs where the confidence interval doesn't include 0. That is, there is a significant difference in the means of speechiness between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and The Weeknd\n- Drake and Bad Bunny\n- Drake and The Weeknd\n- Bad Bunny and the Weeknd\n\nThus, all pairs hold significant difference.\n\n## Tempo\n\n```{r}\n#| code-fold: true\n#| code-summary: T-Test\n#| vscode: {languageId: r}\npairwise.t.test(df$Tempo, df$Artist_name)\n```\n\nFrom this pairwise T-Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is not a significant difference in the means of tempo between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and The Weeknd\n- Drake and Bad Bunny\n- Drake and The Weeknd\n- Bad Bunny and the Weeknd\n\nThus, we fail to reject that any pair of artists hold a significant difference.\n\n```{r}\n#| code-fold: true\n#| code-summary: Wilcoxon Rank Sum Test\n#| vscode: {languageId: r}\npairwise.wilcox.test(df$Tempo, df$Artist_name)\n```\n\nFrom this pairwise Wilcoxon Rank Sum Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is not a significant difference in the means of tempo between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and The Weeknd\n- Drake and Bad Bunny\n- Drake and The Weeknd\n- Bad Bunny and the Weeknd\n\nThus, we fail to reject that any pair of artists hold a significant difference.\n\n```{r}\n#| code-fold: true\n#| code-summary: Bootstrap Test\n#| vscode: {languageId: r}\nc1 = quantile(boot.test(ts,bb,\"Tempo\",1000),c(0.025,0.975))\nc2 = quantile(boot.test(ts,bts,\"Tempo\",1000),c(0.025,0.975))\nc3 = quantile(boot.test(ts,dk,\"Tempo\",1000),c(0.025,0.975))\nc4 = quantile(boot.test(ts,wd,\"Tempo\",1000),c(0.025,0.975))\nc5 = quantile(boot.test(bts,bb,\"Tempo\",1000),c(0.025,0.975))\nc6 = quantile(boot.test(bts,dk,\"Tempo\",1000),c(0.025,0.975))\nc7 = quantile(boot.test(bts,wd,\"Tempo\",1000),c(0.025,0.975))\nc8 = quantile(boot.test(bb,dk,\"Tempo\",1000),c(0.025,0.975))\nc9 = quantile(boot.test(bb,wd,\"Tempo\",1000),c(0.025,0.975))\nc10 = quantile(boot.test(dk,wd,\"Tempo\",1000),c(0.025,0.975))\n\nresult_matrix = matrix(c(\n    c1, c2, c3, c4, c5, c6, c7, c8, c9, c10\n), ncol = 2, byrow = TRUE)\n\nresult_matrix = data.frame(result_matrix)\ninclude_zero = apply(result_matrix, 1, contains_zero)\nresult_matrix[\"Test\"] = include_zero\ncolnames(result_matrix) = c(\"2.5%\",\"97.5%\",\"Test\")\nresult_matrix\n```\n\nFrom this Bootstrap Test with a 95% confidence level, we reject the null hypothesis on pairs where the confidence interval doesn't include 0. That is, there is not a significant difference in the means of tempo between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and The Weeknd\n- Drake and Bad Bunny\n- Drake and The Weeknd\n- Bad Bunny and the Weeknd\n\nThus, we fail to reject that any pair of artists hold a significant difference.\n\n## Valence\n\n```{r}\n#| code-fold: true\n#| code-summary: T-Test\n#| vscode: {languageId: r}\npairwise.t.test(df$Valence, df$Artist_name)\n```\n\nFrom this pairwise T-Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of valence between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Taylor Swift\n- Bad Bunny and Drake\n- Bad Bunny and The Weeknd\n- Drake and Taylor Swift\n- Taylor Swift and The Weeknd\n\nOther pairs below have p-value higher than 0.05, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of valence.\n\n- Drake and The Weekend\n\n```{r}\n#| code-fold: true\n#| code-summary: Wilcoxon Rank Sum Test\n#| vscode: {languageId: r}\npairwise.wilcox.test(df$Valence, df$Artist_name)\n```\n\nFrom this pairwise Wilcoxon Rank Sum Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of valence between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and Taylor Swift\n- Bad Bunny and The Weeknd\n- Drake and Taylor Swift\n- Drake and The Weekend\n- Taylor Swift and The Weeknd\n\nThus, all pairs hold significant difference.\n\n```{r}\n#| code-fold: true\n#| code-summary: Bootstrap Test\n#| vscode: {languageId: r}\nc1 = quantile(boot.test(ts,bb,\"Valence\",1000),c(0.025,0.975))\nc2 = quantile(boot.test(ts,bts,\"Valence\",1000),c(0.025,0.975))\nc3 = quantile(boot.test(ts,dk,\"Valence\",1000),c(0.025,0.975))\nc4 = quantile(boot.test(ts,wd,\"Valence\",1000),c(0.025,0.975))\nc5 = quantile(boot.test(bts,bb,\"Valence\",1000),c(0.025,0.975))\nc6 = quantile(boot.test(bts,dk,\"Valence\",1000),c(0.025,0.975))\nc7 = quantile(boot.test(bts,wd,\"Valence\",1000),c(0.025,0.975))\nc8 = quantile(boot.test(bb,dk,\"Valence\",1000),c(0.025,0.975))\nc9 = quantile(boot.test(bb,wd,\"Valence\",1000),c(0.025,0.975))\nc10 = quantile(boot.test(dk,wd,\"Valence\",1000),c(0.025,0.975))\n\nresult_matrix = matrix(c(\n    c1, c2, c3, c4, c5, c6, c7, c8, c9, c10\n), ncol = 2, byrow = TRUE)\n\nresult_matrix = data.frame(result_matrix)\ninclude_zero = apply(result_matrix, 1, contains_zero)\nresult_matrix[\"Test\"] = include_zero\ncolnames(result_matrix) = c(\"2.5%\",\"97.5%\",\"Test\")\nresult_matrix\n```\n\nFrom this Bootstrap Test with a 95% confidence level, we reject the null hypothesis on pairs where the confidence interval doesn't include 0. That is, there is a significant difference in the means of valence between the following pairs of artists:\n\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and BTS\n- Taylor Swift and The Weeknd\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and The Weeknd\n\nOther pairs below have confidence intervals inclduing 0, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of valence.\n\n- Drake and The Weeknd\n\n# Conclusion\n\nEach of these hypothesis tests compare every pair of artists in each feature and state whether or not they hold a significant difference at a 95% confidence level. Since some of the results for the same feature differ from each other, we stated that more likely than not the result of the majority vote of all the hypotheses tests is the right one (eg: If two tests say there is a statistical difference between two artists and one does not, then we will chose that there seems to be a significant difference among those artists). While this statement is not the best conclusion, further statistical research would have to be done to determine whether or not these claims are fully correct. However, we believe there is generally a higher likelihood when two tests claim the same result.\n\nTempo seems to be the only feature where we fail to reject all the null hypotheses. Thus, we cannot state that there is a significant difference among any pair of artists. This is a very interesting finding since it shows that the five most streamed artists in Spotify from all around the world have a similar tempo. It is a safe assumption that the majority of users like songs with a tempo that falls within the range of these artists. This could be an interesting factor for Spotify to take into account while implementing their song recommendation algorithm. Furthermore, upcoming artists may want to take this information into consideration if they are looking for outreach strategies or popularity gain (even though we cannot state with confidence that this feature is deterministic in an artist’s popularity. We would have to do further statistical research to make this claim. However, it would be a “safe bet”).\n\nAll the other features: Acousticness, Danceability, Energy, Loudness, and Valence are different for a great number of pairs of artists. Thus, we can state confidently that most artists are statistically different in these features. However, based on our results. There seems to be more commonality of the values between all possible pairs from Drake, Bad Bunny, and The Weeknd than anybody else. This is expected since Drake and The Weeknd sing a similar genre but an interesting finding about Bad Bunny, since instead of Rap/pop he sings mainly reggaeton.\n\nWhile this information can be useful for many upcoming artists and maybe for Spotify developers, we suggest that upcoming artists don’t try to plagiarize any of these artists and try to be them, but rather obtain inspiration from them and bring their own self to the table. While statistics are helpful to make inferences from any field, music is still an art and everyone should develop and display their own personality through it.\n\n\n\n\n","srcMarkdownNoYaml":"\n\n# Abstract\n\nThis project looks at specific audio features among the top five most streamed spotify artists of 2022. We used the spotify API to download information on seven audio features for each of the five most streamed artists: BTS, Bad Bunny, The Weeknd, Taylor Swift, and Drake. The features studied are: Accousticness, Danceability, Energy, Loudness, Speechiness, Tempo, and Valence. We performed exploratory data analysis to determine our hypothesis, and then performed three different hypothesis tests to determine which features were common among the artists. We performed T-Tests, Wilcoxon Ranked Sum tests, and bootstrapping tests. We found that the tempo was the same among all of the top five artists, but all of the other audio features were different for at least one artist. \n\n---\n\n# Introduction\n\n\nThis project aims to compare various features of the top 5 most streamed artists on Spotify in 2022 [@artists]. The goal is to identify which variables are statistically same or different among those artists, and eventually determine the optimal range of features in order to get more streams. While we cannot determine with these tests whether or not the features are deterministic on popularity, it will be of great use for comparison and analysis. Thus, if a feature does not differ on any of the artists, we can safely imply that there seems to be an optimal range on that feature if the feature itself is actually deterministic on the number of streams.\n\n\nFor this study, all features obtained from spotify API will be used except for instrumentalness and Liveness. Given that instrumentalness has a huge amount of zeros due to the nature of these artists, that is they are singers, this feature is out of the scope of this project. Furthermore, liveness focuses on whether the music was performed live or not. This feature also is not related to the number of streams.\n\n\nThe rest of the features and their meanings are as follows [@features]:\\\n\n\n- Acousticness: Measures from 0 to 1 whether a track is acoustic or not (0 being the lowest).\n- Danceability: Measures how suitable the music is for dancing (0 being the least suitable).\n- Energy: Measures the perception of intensity and activity of a song from 0 to 1 (0 being the lowest).\n- Loudness: Measures the loudness of tracks in decibels (from -60 to 0).\n- Speechiness: Measures the ratio of spoken words to music in a track from 0 to 1 (0 being the lowest).\n- Tempo: Measures the beats per minute (referring to the pace of the track and the average beat duration).\n- Valence: Measures the positiveness of a track from 0 to 1 (0 being the most negative value and 1 being the most positive value).\n\n\nOur hypothesis testing is going to be pairwise comparing each feature on pairs of all the artists. Our null hypothesis for every feature will be that there is no difference on that specific feature among all pairs of the artists, while the alternative hypothesis will be that there is a statistically significant differnce between pairs of artists on that feature.\n\n\nThe hypotheses can be written as follows:\n\n\n$H_0: \\forall f\\in F [\\forall a,b \\in A, a \\neq b [\\mu_{f,a} - \\mu_{f,b} = 0]]$\\\n$H_A: \\exists f\\in F [\\exists a,b \\in A, a \\neq b [\\mu_{f,a} - \\mu_{f,b} \\neq 0]]$\n\n\n$F$ = {$\\text{Acousticness, Danceability, Energy, Loudness, Speechiness, Tempo, Valence}$}\\\n$A$ = {$\\text{Taylor Swift, BTS, Bad Bunny, Drake, The Weeknd}$}\n\n# Data Collection\n\nIn order to access and contrast the audio features of the artists who are most streamed on Spotify in 2022, we first created a Spotify Developer account. With this account, we can access Spotify's API, which is an effective tool for getting different types of data from Spotify.\nYou can access or retrieve information about artists, tracks, and audio features by using get_artist_audio_features( ) function offered by the Spotify API. The get_artist_audio_features() function appears to be especially pertinent for our needs.\nWe can use this function to find out specific artists' audio feature details in detail. These audio features, which provide insights into the musical qualities that make these artists popular, may include elements like tempo, loudness, energy, danceability, and such.\n\n```{r}\n#| code-fold: true\n#| warning: false\n#| code-summary: Data Preparation\n#| vscode: {languageId: r}\n\nlibrary(spotifyr)\nlibrary(ggplot2)\nlibrary(ggcorrplot)\nlibrary(viridis)\nlibrary(plotly, quietly = TRUE)\n\nSys.setenv(SPOTIFY_CLIENT_ID = \"8a556a04a8634ac99c1c317c336cdcaa\")\nSys.setenv(SPOTIFY_CLIENT_SECRET = \"2c681e6bf45b450396d1e5d2487e5f71\")\n\naccess_token = get_spotify_access_token()\n\nTaylor_Swift = get_artist_audio_features(\"Taylor Swift\")\nBTS = get_artist_audio_features(\"BTS\")\nBad_Bunny = get_artist_audio_features(\"Bad Bunny\")\nDrake = get_artist_audio_features(\"Drake\")\nThe_weeknd = get_artist_audio_features(\"The Weeknd\")\n\nts = data.frame(Taylor_Swift$artist_name,Taylor_Swift$acousticness,\n                Taylor_Swift$danceability,Taylor_Swift$energy,\n                Taylor_Swift$instrumentalness,Taylor_Swift$liveness,\n                Taylor_Swift$loudness,Taylor_Swift$speechiness,\n                Taylor_Swift$tempo, Taylor_Swift$valence,\n                Taylor_Swift$track_name, Taylor_Swift$album_name,Taylor_Swift$album_release_year)\ncolnames(ts) = c(\"Artist_name\",\"Acousticness\",\"Danceability\",\"Energy\", \"Instrumentalness\",\n                              \"Liveness\",\"Loudness\",\"Speechiness\",\n                              \"Tempo\",\"Valence\",\"Track_name\",\"Album_name\",\"Album_release_year\")\n\nbts = data.frame(BTS$artist_name,BTS$acousticness,\n                BTS$danceability,BTS$energy,\n                BTS$instrumentalness,BTS$liveness,\n                BTS$loudness,BTS$speechiness,\n                BTS$tempo, BTS$valence,\n                BTS$track_name, BTS$album_name,BTS$album_release_year)\ncolnames(bts) = c(\"Artist_name\",\"Acousticness\",\"Danceability\",\"Energy\", \"Instrumentalness\",\n                              \"Liveness\",\"Loudness\",\"Speechiness\",\n                              \"Tempo\",\"Valence\",\"Track_name\",\"Album_name\",\"Album_release_year\")\n\nbb = data.frame(Bad_Bunny$artist_name,Bad_Bunny$acousticness,\n                Bad_Bunny$danceability,Bad_Bunny$energy,\n                Bad_Bunny$instrumentalness,Bad_Bunny$liveness,\n                Bad_Bunny$loudness,Bad_Bunny$speechiness,\n                Bad_Bunny$tempo, Bad_Bunny$valence,\n                Bad_Bunny$track_name, Bad_Bunny$album_name,Bad_Bunny$album_release_year)\ncolnames(bb) = c(\"Artist_name\",\"Acousticness\",\"Danceability\",\"Energy\", \"Instrumentalness\",\n                              \"Liveness\",\"Loudness\",\"Speechiness\",\n                              \"Tempo\",\"Valence\",\"Track_name\",\"Album_name\",\"Album_release_year\")\n\ndk = data.frame(Drake$artist_name,Drake$acousticness,\n                Drake$danceability,Drake$energy,\n                Drake$instrumentalness,Drake$liveness,\n                Drake$loudness,Drake$speechiness,\n                Drake$tempo, Drake$valence,\n                Drake$track_name, Drake$album_name,Drake$album_release_year)\ncolnames(dk) = c(\"Artist_name\",\"Acousticness\",\"Danceability\",\"Energy\", \"Instrumentalness\",\n                              \"Liveness\",\"Loudness\",\"Speechiness\",\n                              \"Tempo\",\"Valence\",\"Track_name\",\"Album_name\",\"Album_release_year\")\n\nwd = data.frame(The_weeknd$artist_name,The_weeknd$acousticness,\n                The_weeknd$danceability,The_weeknd$energy,\n                The_weeknd$instrumentalness,The_weeknd$liveness,\n                The_weeknd$loudness,The_weeknd$speechiness,\n                The_weeknd$tempo, The_weeknd$valence,\n                The_weeknd$track_name, The_weeknd$album_name,The_weeknd$album_release_year)\ncolnames(wd) = c(\"Artist_name\",\"Acousticness\",\"Danceability\",\"Energy\", \"Instrumentalness\",\n                              \"Liveness\",\"Loudness\",\"Speechiness\",\n                              \"Tempo\",\"Valence\",\"Track_name\",\"Album_name\",\"Album_release_year\")\n\ndf = rbind(ts, bts, bb, dk, wd)\nhead(df)\n```\n\n```{r}\n#| code-fold: true\n#| code-summary: Checking NAs\n#| vscode: {languageId: r}\ncat(\"There is\", sum(is.na(df)),\"NA values.\")\n```\n\n# Tests\n\n### T-Test\n\nThe t-test is used to compare means to determine if there is a significant difference. The t-test is based on the t-statistic, which is the difference of the means of two populations or samples and dividing it by the standard error of the difference. We used a pairwise t-test in order to test if the means of the specific features were different between the different pairs of artists. The t-test returns a matrix of p-values calculated from the t-statistics for each artist pair. Each p-value refers to the probability of observing a t-statistic as extreme or more extreme than the one obtained. We used a 95% confidence interval. This means that if the p-value was above 0.05$\\%$, we rejected the null hypothesis and accepted the alternative hypothesis for that artist pairing.    \n\n### Wilcoxon Rank Sum Test\n\nWilcoxon test is a non-parametric statistical test used to find whether there is a statistically significant difference between a pair of means. As a non-parametric test, it is great as it does not assume equal variance between the two populations. How it works is by calculating the difference between each pair of data points (one from each population or sample) and ranking the differences in absolute value from largest to smallest. Then, we are calculating the sum of the ranks for each and the Wilcoxon test statistic is the smallest of the two sum ranks (in absolute value). Additionally, a p-value is calculated which determines the probability of obtaining a test statistic as extreme or more extreme than the one obtained, and this is the value returned in our hypothesis tests. For this test, we have used a 95$\\%$ confidence level, which means that if the p-value obtained is less than 0.05, we reject the null hypothesis while if it is greater than 0.05, we fail to reject our null hypothesis.\n\n###  Bootstrap Test\n\nThe bootstrapping difference in means is a useful hypothesis test to compare whether or not two means statistically differ from each other. Each population/sample is resampled n times with n samples in each resample. Then, the mean of each is calculated and subtracted from the other resample of the comparing population/sample. Then, a new distribution is obtained (normally distributed) of the difference in means. Then, a confidence interval is calculated at your confidence level (95$\\%$ in our case) and, if the interval contains the value of 0, we will reject the null as we find statistical significance on the means of both populations. If the interval is positive, that means that the first mean is statistically significantly greater from the one subtracted while, if negative, the first mean is statistically significantly lower from the one subtracted. However, if the confidence interval contains 0, we fail to reject at our confidence level and cannot state that there is a difference between the means of both populations.\n\n# EDA\n\nThe objective of Exploratory Data Analysis is to give us a better understanding of our data sets by obtaining information about the data’s range, characteristics, correlations, patterns, and visual outliers. This step is crucial for making the right assumptions, cross checking results, and making the right conclusions. \n\nThe plots below provide us with relevant information about each of the seven features based on each artist. While no final conclusions can be drawn from these, they will allow us to visualize the data and better understand it.\n\n```{r}\n#| code-fold: true\n#| vscode: {languageId: r}\ncat(\"Taylor Swift has\",nrow(ts),\"tracks.\",\"\\n\")\ncat(\"BTS has\",nrow(bts),\"tracks.\",\"\\n\")\ncat(\"Bad Bunny has\",nrow(bb),\"tracks.\",\"\\n\")\ncat(\"Drake has\",nrow(dk),\"tracks.\",\"\\n\")\ncat(\"The Weeknd has\",nrow(wd),\"tracks.\",\"\\n\")\n```\n\nThe above data frame row numbers give us the number of tracks published by each artist on spotify. Taylor swift unfortunately has the largest catalog, with 530 individual tracks. Bad Bunny has the smallest catalog of the top five streamed artists, with only 113 individual tracks. To help put those numbers into perspective, consider that the average EP is 4 to 5 songs long, and the average album is 10-12 songs long. Even though Bad Bunny has the smallest catalog of the top five, he still has far more songs then the average spotify artist. It makes sense that the most streamed artists would be ones that have a significant number of tracks for listeners to play.\n\n```{r}\n#| code-fold: true\n#| vscode: {languageId: r}\nmx = cor(df[,c(2,3,4,5,6,7,8,9,10)])\nggcorrplot(mx, hc.order = TRUE, type = \"lower\", lab=TRUE, title = \"Correlation between features\")\n```\n\nAbove is a correlation heatmap between all of the initially collected features. After preliminary EDA, we determined that the features Instrumentallness and Liveness would be excluded from future EDA, because due to the nature of the top five artists they provide very little useful information. In the heatmap above, we can see that the highest correlation is between energy and loudness. This makes sense, as we can expect louder songs to feel like they have more energy. We can also see significant positive correlation between energy and valence, telling us that high energy songs are probably more likely to be positive sounding. There is a significant visible negative correlation between loudness and acousticness, as well as energy and acousticness. This also makes sense, as acoustic songs tend to sound slower and lower energy then non acoustic ones. One of the more interesting findings from this plot is that both tempo and speechiness don't have a strong correlation with any other features.\n\n```{r}\n#| code-fold: true\n#| warning: false\n#| vscode: {languageId: r}\nggplot(df, aes_string(x = \"Artist_name\", y = \"Speechiness\", fill = \"Artist_name\")) +\ngeom_boxplot() + ggtitle(\"Speechiness Comparison\") + xlab(\"Artists\") + ylab(\"Speechiness\") +\nscale_fill_manual(values = c(\"lightblue1\", \"pink1\", \"burlywood1\", \"turquoise\", \"purple3\")) + theme_minimal()\n\nggplot(df, aes_string(x = \"Artist_name\", y = \"Loudness\", fill = \"Artist_name\")) +\ngeom_boxplot() + ggtitle(\"Loudness Comparison\") + xlab(\"Artists\") + ylab(\"Loudness\") +\nscale_fill_manual(values = c(\"lightblue1\", \"pink1\", \"burlywood1\", \"turquoise\", \"purple3\")) + theme_minimal()\n```\n\nAbove are box plots for the features  speechiness and loudness. Speechiness describes the amount of spoken word in a Spotify track. We can see that all of the top five artists have relatively low speechiness scores, with Taylor Swift's average and interquartile range being by far the smallest. Drake has the largest average and interquartile range. This is likely due to the genre of the artists, as Taylor Swift's songs are almost all pop or country pop, while Drake's music is closer to rap/hip-hop. In our loudness box plot, we can see all of the artists have relatively high loudness scores. BTS has the highest loudness score, followed by Bad Bunny. Drake, Taylor Swift, and the Weeknd all have relatively similar loudness scores. This is likely also due to the artist's genre. BTS is a K-POP group, while Bad BUnny is Reggaeton.\n\n```{r}\n#| code-fold: true\n#| warning: false\n#| vscode: {languageId: r}\nggplot(df, aes_string(x = \"Artist_name\", y = \"Instrumentalness\", fill = \"Artist_name\")) +\n                geom_boxplot() + ggtitle(\"Instrumentalness Comparison\") + xlab(\"Artists\") + ylab(\"Instrumentalness\") +\n                scale_fill_manual(values = c(\"lightblue1\", \"pink1\", \"burlywood1\", \"turquoise\", \"purple3\")) + theme_minimal()\n```\n\nAbove is the box plot for instrumentalness. Instrumentalness describes if a track is instrumental as opposed to vocal. We chose to not include this feature in our analysis because of the fact that almost all of the values are 0. This is expected, because all of the top five artists are singers.\n\n```{r}\n#| code-fold: true\n#| vscode: {languageId: r}\nggplot(df, aes(x = Energy, fill = Artist_name)) +\ngeom_density(alpha = 0.5) +\nlabs(title = \"Energy Comparison\", x = \"Energy\", y = \"Density\") +\nscale_fill_manual(values = c(\"lightblue1\", \"pink1\", \"burlywood1\", \"turquoise\", \"purple3\")) +\ntheme_minimal()\n\nggplot(df, aes(x = Tempo, fill = Artist_name)) +\ngeom_density(alpha = 0.5) +\nlabs(title = \"Tempo Comparison\", x = \"Tempo\", y = \"Density\") +\nscale_fill_manual(values = c(\"lightblue1\", \"pink1\", \"burlywood1\", \"turquoise\", \"purple3\")) +\ntheme_minimal()\n```\n\nAbove are density plots for the features energy and tempo. This type of plot allows us to view the distributions of the features for each artist on top of each other. When looking at the energy densities, we can see right away that BTS has a much higher energy distribution than the other artists. They also have a lower standard deviation than the other distributions. BAd bunny has the second highest energy distribution. Drake has the lowest energy distribution. One interesting thing to note is that Taylor Swift appears to have the highest standard deviation among the top five artists.\n\n```{r}\n#| warning: false\n#| code-fold: true\n#| vscode: {languageId: r}\nggplot(data = df, aes(x = Artist_name, y = Danceability, fill = Artist_name)) +\n    geom_violin(width = 0.5) +\n    geom_boxplot(width = 0.9, color = \"grey\", alpha = 0.2) +\n    scale_fill_viridis(discrete = TRUE) +\n    labs(title = \"Danceability Comparison\", x = \"Artists\", y = \"Danceability\")\n\nggplot(data = df, aes(x = Artist_name, y = Acousticness, fill = Artist_name)) +\n    geom_violin(width = 0.5) +\n    geom_boxplot(width = 0.9, color = \"grey\", alpha = 0.2) +\n    scale_fill_viridis(discrete = TRUE) +\n    labs(title = \"Acousticness Comparison\", x = \"Artists\", y = \"Acousticness\")\n    \nggplot(data = df, aes(x = Artist_name, y = Valence, fill = Artist_name)) +\n    geom_violin(width = 0.5) +\n    geom_boxplot(width = 0.9, color = \"grey\", alpha = 0.2) +\n    scale_fill_viridis(discrete = TRUE) +\n    labs(title = \"Valence Comparison\", x = \"Artists\", y = \"Valence\")\n        \n```\n\nAbove are density plots for the features energy and tempo. This type of plot allows us to view the distributions of the features for each artist on top of each other. When looking at the energy densities, we can see right away that BTS has a much higher energy distribution than the other artists. They also have a lower standard deviation than the other distributions. BAd bunny has the second highest energy distribution. Drake has the lowest energy distribution. One interesting thing to note is that Taylor Swift appears to have the highest standard deviation among the top five artists.\n\n```{r}\n#| code-fold: true\n#| vscode: {languageId: r}\nggplot(data = df, aes(x = Artist_name, y = Acousticness, color = Artist_name)) +\n  geom_jitter(alpha = 0.7, width = 0.3) +\n  geom_boxplot(width = 0.2, outlier.shape = NA, coef = 0) +\n  labs(title = \"Acousticness Comparison\",\n       x = \"Artist\",\n       y = \"Acousticness\") +\n  scale_color_manual(values = c(\"lightblue1\", \"pink1\", \"burlywood1\", \"turquoise\", \"purple3\")) +\n  theme_minimal()\n```\n\nAbove is a density box plot for acousticness. Again, we can see that BTS has a much lower Acousticness score and a significantly narrower interquartile range. We can see again that Taylor Swift has a much wider inter quartile range than any of the other top five artists. Another interesting thing we can take away from this plot is the visual representation of the scale of the artists catalogs. The density of Taylor Swift's plot is much greater than that of artists with smaller catalogs like BTS and Bad Bunny.\n\n```{r}\n#| code-fold: true\n#| vscode: {languageId: r}\nplot_ly(df, x = ~Energy, y = ~Loudness, z = ~Artist_name, type = 'scatter3d', color = ~Artist_name, mode = 'markers')\n```\n\nAbove is the 3D plot on loudness and energy between artists. As we can see on the correlation heatmap, we can see there is a positive correlation between energy and loudness on all artists.\n\n```{r}\n#| code-fold: true\n#| vscode: {languageId: r}\nplot_ly(df, x = ~Loudness, y = ~Acousticness, z = ~Artist_name, type = 'scatter3d', color = ~Artist_name, mode = 'markers')\n```\n\nHaving the correlation coefficient of -0.56, the 3D plot doesn't show the a strong correlation visually.\n\n# Hypothesis Testing\n\n```{r}\n#| code-fold: true\n#| code-summary: Functions for bootstrap tests\n#| vscode: {languageId: r}\n# Function to bootstrap mean difference of two samples for the test\nboot.test = function(x1,x2,feature,iter){\n    boot1 = numeric(length(x1[[feature]]))\n    boot2 = numeric(length(x2[[feature]]))\n    for(i in 1:iter){\n        boot1[i] = mean(sample(x1[[feature]],length(x1[[feature]]),replace=TRUE))\n        boot2[i] = mean(sample(x2[[feature]],length(x2[[feature]]),replace=TRUE))\n    }\n    return(boot1 - boot2)\n}\n\n# Function to check if 0 is within the range\ncontains_zero <- function(quantiles) {\n  return (quantiles[1] <= 0 && quantiles[2] >= 0)\n}\n```\n\nThese two functions will make easier to do bootstrap tests. Function `boot.test` returns mean difference between two bootstrap samples. From that mean difference, we can use `contains_zero` function to check whether the confidence interval includes zero or not in a certain level.\n\n## Acousticness\n\n```{r}\n#| code-fold: true\n#| code-summary: T-Test\n#| vscode: {languageId: r}\npairwise.t.test(df$Acousticness, df$Artist_name)\n```\n\nFrom this pairwise T-Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of acousticness between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Taylor Swift\n- Drake and Taylor Swift\n- Taylor Swift and The Weeknd\n\nOther pairs below have p-value higher than 0.05, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of acousticness.\n\n- Bad Bunny and Drake\n- Bad Bunny and The Weeknd\n- Drake and The Weekend\n\n```{r}\n#| code-fold: true\n#| code-summary: Wilcoxon Rank Sum Test\n#| vscode: {languageId: r}\npairwise.wilcox.test(df$Acousticness, df$Artist_name)\n```\n\nFrom this pairwise Wilcoxon Rank Sum Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of acousticness between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n\nOther pairs below have p-value higher than 0.05, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of acousticness.\n\n- Bad Bunny and Drake\n- Bad Bunny and Taylor Swift\n- Bad Bunny and The Weeknd\n- Drake and Taylor Swift\n- Drake and The Weekend\n- Taylor Swift and The Weeknd\n\n```{r}\n#| code-fold: true\n#| code-summary: Bootstrap Test\n#| vscode: {languageId: r}\nc1 = quantile(boot.test(ts,bb,\"Acousticness\",1000),c(0.025,0.975))\nc2 = quantile(boot.test(ts,bts,\"Acousticness\",1000),c(0.025,0.975))\nc3 = quantile(boot.test(ts,dk,\"Acousticness\",1000),c(0.025,0.975))\nc4 = quantile(boot.test(ts,wd,\"Acousticness\",1000),c(0.025,0.975))\nc5 = quantile(boot.test(bts,bb,\"Acousticness\",1000),c(0.025,0.975))\nc6 = quantile(boot.test(bts,dk,\"Acousticness\",1000),c(0.025,0.975))\nc7 = quantile(boot.test(bts,wd,\"Acousticness\",1000),c(0.025,0.975))\nc8 = quantile(boot.test(bb,dk,\"Acousticness\",1000),c(0.025,0.975))\nc9 = quantile(boot.test(bb,wd,\"Acousticness\",1000),c(0.025,0.975))\nc10 = quantile(boot.test(dk,wd,\"Acousticness\",1000),c(0.025,0.975))\n\nresult_matrix = matrix(c(\n    c1, c2, c3, c4, c5, c6, c7, c8, c9, c10\n), ncol = 2, byrow = TRUE)\n\nresult_matrix = data.frame(result_matrix)\ninclude_zero = apply(result_matrix, 1, contains_zero)\nresult_matrix[\"Test\"] = include_zero\ncolnames(result_matrix) = c(\"2.5%\",\"97.5%\",\"Test\")\nresult_matrix\n```\n\nFrom this Bootstrap Test with a 95% confidence level, we reject the null hypothesis on pairs where the confidence interval doesn't include 0. That is, there is a significant difference in the means of acousticness between the following pairs of artists:\n\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and BTS\n- Taylor Swift and The Weeknd\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and The Weeknd\n\nOther pairs below have confidence intervals inclduing 0, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of acousticness.\n\n- Bad Bunny and Drake\n- Bad Bunny and The Weeknd\n- Drake and The Weeknd\n\n## Danceability\n\n```{r}\n#| code-fold: true\n#| code-summary: T-Test\n#| vscode: {languageId: r}\npairwise.t.test(df$Danceability, df$Artist_name)\n```\n\nFrom this pairwise T-Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of danceability between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and The Weeknd\n- Drake and Bad Bunny\n- Drake and The Weeknd\n- Bad Bunny and the Weeknd\n\n\nThus, all pairs hold significant difference.\n\n```{r}\n#| code-fold: true\n#| code-summary: Wilcoxon Rank Sum Test\n#| vscode: {languageId: r}\npairwise.wilcox.test(df$Danceability, df$Artist_name)\n```\n\nFrom this pairwise Wilcoxon Rank Sum Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of danceability between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and The Weeknd\n- Drake and Bad Bunny\n- Drake and The Weeknd\n- Bad Bunny and the Weeknd\n\nThus, all pairs hold significant difference.\n\n```{r}\n#| code-fold: true\n#| code-summary: Bootstrap Test\n#| vscode: {languageId: r}\nc1 = quantile(boot.test(ts,bb,\"Danceability\",1000),c(0.025,0.975))\nc2 = quantile(boot.test(ts,bts,\"Danceability\",1000),c(0.025,0.975))\nc3 = quantile(boot.test(ts,dk,\"Danceability\",1000),c(0.025,0.975))\nc4 = quantile(boot.test(ts,wd,\"Danceability\",1000),c(0.025,0.975))\nc5 = quantile(boot.test(bts,bb,\"Danceability\",1000),c(0.025,0.975))\nc6 = quantile(boot.test(bts,dk,\"Danceability\",1000),c(0.025,0.975))\nc7 = quantile(boot.test(bts,wd,\"Danceability\",1000),c(0.025,0.975))\nc8 = quantile(boot.test(bb,dk,\"Danceability\",1000),c(0.025,0.975))\nc9 = quantile(boot.test(bb,wd,\"Danceability\",1000),c(0.025,0.975))\nc10 = quantile(boot.test(dk,wd,\"Danceability\",1000),c(0.025,0.975))\n\nresult_matrix = matrix(c(\n    c1, c2, c3, c4, c5, c6, c7, c8, c9, c10\n), ncol = 2, byrow = TRUE)\n\nresult_matrix = data.frame(result_matrix)\ninclude_zero = apply(result_matrix, 1, contains_zero)\nresult_matrix[\"Test\"] = include_zero\ncolnames(result_matrix) = c(\"2.5%\",\"97.5%\",\"Test\")\nresult_matrix\n```\n\nFrom this Bootstrap Test with a 95% confidence level, we reject the null hypothesis on pairs where the confidence interval doesn't include 0. That is, there is a significant difference in the means of danceability between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and The Weeknd\n- Drake and Bad Bunny\n- Drake and The Weeknd\n- Bad Bunny and the Weeknd\n\nThus, all pairs hold significant difference.\n\n## Energy\n\n```{r}\n#| code-fold: true\n#| code-summary: T-Test\n#| vscode: {languageId: r}\npairwise.t.test(df$Energy, df$Artist_name)\n```\n\nFrom this pairwise T-Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of energy between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and Taylor Swift\n- Bad Bunny and The Weekend\n\nOther pairs below have p-value higher than 0.05, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of energy.\n\n- Drake and Taylor Swift\n- Drake and The Weeknd\n- Taylor Swift and The Weeknd\n\n```{r}\n#| code-fold: true\n#| code-summary: Wilcoxon Rank Sum Test\n#| vscode: {languageId: r}\npairwise.wilcox.test(df$Energy, df$Artist_name)\n```\n\nFrom this pairwise Wilcoxon Rank Sum Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of energy between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and Taylor Swift\n- Bad Bunny and The Weeknd\n- Drake and Taylor Swift\n- Drake and The Weekend\n\nOther pairs below have p-value higher than 0.05, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of energy.\n\n- Taylor Swift and The Weeknd\n\n```{r}\n#| code-fold: true\n#| code-summary: Bootstrap Test\n#| vscode: {languageId: r}\nc1 = quantile(boot.test(ts,bb,\"Energy\",1000),c(0.025,0.975))\nc2 = quantile(boot.test(ts,bts,\"Energy\",1000),c(0.025,0.975))\nc3 = quantile(boot.test(ts,dk,\"Energy\",1000),c(0.025,0.975))\nc4 = quantile(boot.test(ts,wd,\"Energy\",1000),c(0.025,0.975))\nc5 = quantile(boot.test(bts,bb,\"Energy\",1000),c(0.025,0.975))\nc6 = quantile(boot.test(bts,dk,\"Energy\",1000),c(0.025,0.975))\nc7 = quantile(boot.test(bts,wd,\"Energy\",1000),c(0.025,0.975))\nc8 = quantile(boot.test(bb,dk,\"Energy\",1000),c(0.025,0.975))\nc9 = quantile(boot.test(bb,wd,\"Energy\",1000),c(0.025,0.975))\nc10 = quantile(boot.test(dk,wd,\"Energy\",1000),c(0.025,0.975))\n\nresult_matrix = matrix(c(\n    c1, c2, c3, c4, c5, c6, c7, c8, c9, c10\n), ncol = 2, byrow = TRUE)\n\nresult_matrix = data.frame(result_matrix)\ninclude_zero = apply(result_matrix, 1, contains_zero)\nresult_matrix[\"Test\"] = include_zero\ncolnames(result_matrix) = c(\"2.5%\",\"97.5%\",\"Test\")\nresult_matrix\n```\n\nFrom this Bootstrap Test with a 95% confidence level, we reject the null hypothesis on pairs where the confidence interval doesn't include 0. That is, there is a significant difference in the means of energy between the following pairs of artists:\n\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and BTS\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and The Weeknd\n- Drake and The Weeknd\n\nOther pairs below have confidence intervals inclduing 0, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of energy.\n\n- Taylor Swift and The Weeknd\n\n## Loudness\n\n```{r}\n#| code-fold: true\n#| code-summary: T-Test\n#| vscode: {languageId: r}\npairwise.t.test(df$Loudness, df$Artist_name)\n```\n\nFrom this pairwise T-Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of loudness between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and Taylor Swift\n- Bad Bunny and The Weekend\n- Drake and Taylor Swift\n- Taylor Swift and The Weeknd\n\nOther pairs below have p-value higher than 0.05, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of loudness.\n\n- Drake and The Weeknd\n\n\n```{r}\n#| code-fold: true\n#| code-summary: Wilcoxon Rank Sum Test\n#| vscode: {languageId: r}\npairwise.wilcox.test(df$Loudness, df$Artist_name)\n```\n\nFrom this pairwise Wilcoxon Rank Sum Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of loudness between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and Taylor Swift\n- Bad Bunny and The Weekend\n- Drake and Taylor Swift\n- Taylor Swift and The Weeknd\n\nOther pairs below have p-value higher than 0.05, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of loudness.\n\n- Drake and The Weeknd\n\n```{r}\n#| code-fold: true\n#| code-summary: Bootstrap Test\n#| vscode: {languageId: r}\nc1 = quantile(boot.test(ts,bb,\"Loudness\",1000),c(0.025,0.975))\nc2 = quantile(boot.test(ts,bts,\"Loudness\",1000),c(0.025,0.975))\nc3 = quantile(boot.test(ts,dk,\"Loudness\",1000),c(0.025,0.975))\nc4 = quantile(boot.test(ts,wd,\"Loudness\",1000),c(0.025,0.975))\nc5 = quantile(boot.test(bts,bb,\"Loudness\",1000),c(0.025,0.975))\nc6 = quantile(boot.test(bts,dk,\"Loudness\",1000),c(0.025,0.975))\nc7 = quantile(boot.test(bts,wd,\"Loudness\",1000),c(0.025,0.975))\nc8 = quantile(boot.test(bb,dk,\"Loudness\",1000),c(0.025,0.975))\nc9 = quantile(boot.test(bb,wd,\"Loudness\",1000),c(0.025,0.975))\nc10 = quantile(boot.test(dk,wd,\"Loudness\",1000),c(0.025,0.975))\n\nresult_matrix = matrix(c(\n    c1, c2, c3, c4, c5, c6, c7, c8, c9, c10\n), ncol = 2, byrow = TRUE)\n\nresult_matrix = data.frame(result_matrix)\ninclude_zero = apply(result_matrix, 1, contains_zero)\nresult_matrix[\"Test\"] = include_zero\ncolnames(result_matrix) = c(\"2.5%\",\"97.5%\",\"Test\")\nresult_matrix\n```\n\nFrom this Bootstrap Test with a 95% confidence level, we reject the null hypothesis on pairs where the confidence interval doesn't include 0. That is, there is a significant difference in the means of loudness between the following pairs of artists:\n\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and Taylor Swift\n- Bad Bunny and The Weekend\n- Drake and Taylor Swift\n- Taylor Swift and The Weeknd\n\nOther pairs below have confidence intervals inclduing 0, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of loudness.\n\n- Drake and The Weeknd\n\n## Speechiness\n\n```{r}\n#| code-fold: true\n#| code-summary: T-Test\n#| vscode: {languageId: r}\npairwise.t.test(df$Speechiness, df$Artist_name)\n```\n\nFrom this pairwise T-Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of speechiness between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and Taylor Swift\n- Bad Bunny and The Weeknd\n- Drake and Taylor Swift\n- Drake and The Weeknd\n\nOther pairs below have p-value higher than 0.05, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of speechiness.\n\n- Taylor Swift and The Weeknd\n\n```{r}\n#| code-fold: true\n#| code-summary: Wilcoxon Rank Sum Test\n#| vscode: {languageId: r}\npairwise.wilcox.test(df$Speechiness, df$Artist_name)\n```\n\nFrom this pairwise Wilcoxon Rank Sum Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of speechiness between the following pairs of artists:\n\n-- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and Taylor Swift\n- Bad Bunny and The Weeknd\n- Drake and Taylor Swift\n- Drake and The Weeknd\n- Taylor Swift and The Weeknd\n\nOther pairs below have p-value higher than 0.05, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of speechiness.\n\n- BTS and Bad Bunny\n\n```{r}\n#| code-fold: true\n#| code-summary: Bootstrap Test\n#| vscode: {languageId: r}\nc1 = quantile(boot.test(ts,bb,\"Speechiness\",1000),c(0.025,0.975))\nc2 = quantile(boot.test(ts,bts,\"Speechiness\",1000),c(0.025,0.975))\nc3 = quantile(boot.test(ts,dk,\"Speechiness\",1000),c(0.025,0.975))\nc4 = quantile(boot.test(ts,wd,\"Speechiness\",1000),c(0.025,0.975))\nc5 = quantile(boot.test(bts,bb,\"Speechiness\",1000),c(0.025,0.975))\nc6 = quantile(boot.test(bts,dk,\"Speechiness\",1000),c(0.025,0.975))\nc7 = quantile(boot.test(bts,wd,\"Speechiness\",1000),c(0.025,0.975))\nc8 = quantile(boot.test(bb,dk,\"Speechiness\",1000),c(0.025,0.975))\nc9 = quantile(boot.test(bb,wd,\"Speechiness\",1000),c(0.025,0.975))\nc10 = quantile(boot.test(dk,wd,\"Speechiness\",1000),c(0.025,0.975))\n\nresult_matrix = matrix(c(\n    c1, c2, c3, c4, c5, c6, c7, c8, c9, c10\n), ncol = 2, byrow = TRUE)\n\nresult_matrix = data.frame(result_matrix)\ninclude_zero = apply(result_matrix, 1, contains_zero)\nresult_matrix[\"Test\"] = include_zero\ncolnames(result_matrix) = c(\"2.5%\",\"97.5%\",\"Test\")\nresult_matrix\n```\n\nFrom this Bootstrap Test with a 95% confidence level, we reject the null hypothesis on pairs where the confidence interval doesn't include 0. That is, there is a significant difference in the means of speechiness between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and The Weeknd\n- Drake and Bad Bunny\n- Drake and The Weeknd\n- Bad Bunny and the Weeknd\n\nThus, all pairs hold significant difference.\n\n## Tempo\n\n```{r}\n#| code-fold: true\n#| code-summary: T-Test\n#| vscode: {languageId: r}\npairwise.t.test(df$Tempo, df$Artist_name)\n```\n\nFrom this pairwise T-Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is not a significant difference in the means of tempo between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and The Weeknd\n- Drake and Bad Bunny\n- Drake and The Weeknd\n- Bad Bunny and the Weeknd\n\nThus, we fail to reject that any pair of artists hold a significant difference.\n\n```{r}\n#| code-fold: true\n#| code-summary: Wilcoxon Rank Sum Test\n#| vscode: {languageId: r}\npairwise.wilcox.test(df$Tempo, df$Artist_name)\n```\n\nFrom this pairwise Wilcoxon Rank Sum Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is not a significant difference in the means of tempo between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and The Weeknd\n- Drake and Bad Bunny\n- Drake and The Weeknd\n- Bad Bunny and the Weeknd\n\nThus, we fail to reject that any pair of artists hold a significant difference.\n\n```{r}\n#| code-fold: true\n#| code-summary: Bootstrap Test\n#| vscode: {languageId: r}\nc1 = quantile(boot.test(ts,bb,\"Tempo\",1000),c(0.025,0.975))\nc2 = quantile(boot.test(ts,bts,\"Tempo\",1000),c(0.025,0.975))\nc3 = quantile(boot.test(ts,dk,\"Tempo\",1000),c(0.025,0.975))\nc4 = quantile(boot.test(ts,wd,\"Tempo\",1000),c(0.025,0.975))\nc5 = quantile(boot.test(bts,bb,\"Tempo\",1000),c(0.025,0.975))\nc6 = quantile(boot.test(bts,dk,\"Tempo\",1000),c(0.025,0.975))\nc7 = quantile(boot.test(bts,wd,\"Tempo\",1000),c(0.025,0.975))\nc8 = quantile(boot.test(bb,dk,\"Tempo\",1000),c(0.025,0.975))\nc9 = quantile(boot.test(bb,wd,\"Tempo\",1000),c(0.025,0.975))\nc10 = quantile(boot.test(dk,wd,\"Tempo\",1000),c(0.025,0.975))\n\nresult_matrix = matrix(c(\n    c1, c2, c3, c4, c5, c6, c7, c8, c9, c10\n), ncol = 2, byrow = TRUE)\n\nresult_matrix = data.frame(result_matrix)\ninclude_zero = apply(result_matrix, 1, contains_zero)\nresult_matrix[\"Test\"] = include_zero\ncolnames(result_matrix) = c(\"2.5%\",\"97.5%\",\"Test\")\nresult_matrix\n```\n\nFrom this Bootstrap Test with a 95% confidence level, we reject the null hypothesis on pairs where the confidence interval doesn't include 0. That is, there is not a significant difference in the means of tempo between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and The Weeknd\n- Drake and Bad Bunny\n- Drake and The Weeknd\n- Bad Bunny and the Weeknd\n\nThus, we fail to reject that any pair of artists hold a significant difference.\n\n## Valence\n\n```{r}\n#| code-fold: true\n#| code-summary: T-Test\n#| vscode: {languageId: r}\npairwise.t.test(df$Valence, df$Artist_name)\n```\n\nFrom this pairwise T-Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of valence between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Taylor Swift\n- Bad Bunny and Drake\n- Bad Bunny and The Weeknd\n- Drake and Taylor Swift\n- Taylor Swift and The Weeknd\n\nOther pairs below have p-value higher than 0.05, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of valence.\n\n- Drake and The Weekend\n\n```{r}\n#| code-fold: true\n#| code-summary: Wilcoxon Rank Sum Test\n#| vscode: {languageId: r}\npairwise.wilcox.test(df$Valence, df$Artist_name)\n```\n\nFrom this pairwise Wilcoxon Rank Sum Test with a 95% confidence level, we reject the null hypothesis on pairs that have p-value less than 0.05. That is, there is a significant difference in the means of valence between the following pairs of artists:\n\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and Taylor Swift\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and Taylor Swift\n- Bad Bunny and The Weeknd\n- Drake and Taylor Swift\n- Drake and The Weekend\n- Taylor Swift and The Weeknd\n\nThus, all pairs hold significant difference.\n\n```{r}\n#| code-fold: true\n#| code-summary: Bootstrap Test\n#| vscode: {languageId: r}\nc1 = quantile(boot.test(ts,bb,\"Valence\",1000),c(0.025,0.975))\nc2 = quantile(boot.test(ts,bts,\"Valence\",1000),c(0.025,0.975))\nc3 = quantile(boot.test(ts,dk,\"Valence\",1000),c(0.025,0.975))\nc4 = quantile(boot.test(ts,wd,\"Valence\",1000),c(0.025,0.975))\nc5 = quantile(boot.test(bts,bb,\"Valence\",1000),c(0.025,0.975))\nc6 = quantile(boot.test(bts,dk,\"Valence\",1000),c(0.025,0.975))\nc7 = quantile(boot.test(bts,wd,\"Valence\",1000),c(0.025,0.975))\nc8 = quantile(boot.test(bb,dk,\"Valence\",1000),c(0.025,0.975))\nc9 = quantile(boot.test(bb,wd,\"Valence\",1000),c(0.025,0.975))\nc10 = quantile(boot.test(dk,wd,\"Valence\",1000),c(0.025,0.975))\n\nresult_matrix = matrix(c(\n    c1, c2, c3, c4, c5, c6, c7, c8, c9, c10\n), ncol = 2, byrow = TRUE)\n\nresult_matrix = data.frame(result_matrix)\ninclude_zero = apply(result_matrix, 1, contains_zero)\nresult_matrix[\"Test\"] = include_zero\ncolnames(result_matrix) = c(\"2.5%\",\"97.5%\",\"Test\")\nresult_matrix\n```\n\nFrom this Bootstrap Test with a 95% confidence level, we reject the null hypothesis on pairs where the confidence interval doesn't include 0. That is, there is a significant difference in the means of valence between the following pairs of artists:\n\n- Taylor Swift and Bad Bunny\n- Taylor Swift and Drake\n- Taylor Swift and BTS\n- Taylor Swift and The Weeknd\n- BTS and Bad Bunny\n- BTS and Drake\n- BTS and The Weeknd\n- Bad Bunny and Drake\n- Bad Bunny and The Weeknd\n\nOther pairs below have confidence intervals inclduing 0, which we fail to rejct the null hypotheis. That is there is no significant difference in the means of valence.\n\n- Drake and The Weeknd\n\n# Conclusion\n\nEach of these hypothesis tests compare every pair of artists in each feature and state whether or not they hold a significant difference at a 95% confidence level. Since some of the results for the same feature differ from each other, we stated that more likely than not the result of the majority vote of all the hypotheses tests is the right one (eg: If two tests say there is a statistical difference between two artists and one does not, then we will chose that there seems to be a significant difference among those artists). While this statement is not the best conclusion, further statistical research would have to be done to determine whether or not these claims are fully correct. However, we believe there is generally a higher likelihood when two tests claim the same result.\n\nTempo seems to be the only feature where we fail to reject all the null hypotheses. Thus, we cannot state that there is a significant difference among any pair of artists. This is a very interesting finding since it shows that the five most streamed artists in Spotify from all around the world have a similar tempo. It is a safe assumption that the majority of users like songs with a tempo that falls within the range of these artists. This could be an interesting factor for Spotify to take into account while implementing their song recommendation algorithm. Furthermore, upcoming artists may want to take this information into consideration if they are looking for outreach strategies or popularity gain (even though we cannot state with confidence that this feature is deterministic in an artist’s popularity. We would have to do further statistical research to make this claim. However, it would be a “safe bet”).\n\nAll the other features: Acousticness, Danceability, Energy, Loudness, and Valence are different for a great number of pairs of artists. Thus, we can state confidently that most artists are statistically different in these features. However, based on our results. There seems to be more commonality of the values between all possible pairs from Drake, Bad Bunny, and The Weeknd than anybody else. This is expected since Drake and The Weeknd sing a similar genre but an interesting finding about Bad Bunny, since instead of Rap/pop he sings mainly reggaeton.\n\nWhile this information can be useful for many upcoming artists and maybe for Spotify developers, we suggest that upcoming artists don’t try to plagiarize any of these artists and try to be them, but rather obtain inspiration from them and bring their own self to the table. While statistics are helpful to make inferences from any field, music is still an art and everyone should develop and display their own personality through it.\n\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"embed-resources":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"yeti","title":"Behind the Beats: A Feature Analysis of Songs by Spotify’s Fab Five","authors":["Brian Kwon","Jorge Bris Moreno","Aaron Schwall","Joe Zhang"],"bibliography":["references.bib"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}